name: PR Comment Test Runner

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

jobs:
  test:
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, 'run tests') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch all history and tags
          fetch-depth: 0
          # Checkout PR branch
          ref: refs/pull/${{ github.event.issue.number }}/head

      # Install pnpm first
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      # Then setup Node.js with pnpm caching
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Get target branch
        id: get-target-branch
        run: |
          TARGET_BRANCH=$(gh pr view ${{ github.event.issue.number }} --json baseRefName -q .baseRefName)
          echo "target_branch=$TARGET_BRANCH" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        id: run-tests
        continue-on-error: true
        run: |
          OUTPUT=$(pnpm test:minimal:pr ${{ steps.get-target-branch.outputs.target_branch }} ${{ github.event.pull_request.head.ref }} 2>&1)
          echo "output<<EOF" >> $GITHUB_OUTPUT
          echo "$OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          if [ $? -eq 0 ]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

      - name: Create success comment
        if: steps.run-tests.outputs.status == 'success'
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ✅ Tests passed successfully!
            
            <details>
            <summary>Test Output</summary>
            
            ```
            ${{ steps.run-tests.outputs.output }}
            ```
            
            </details>

      - name: Create failure comment
        if: steps.run-tests.outputs.status == 'failure'
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ❌ Tests failed!
            
            <details>
            <summary>Test Output</summary>
            
            ```
            ${{ steps.run-tests.outputs.output }}
            ```
            
            </details>

      - name: Add reaction to comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: 'rocket'